version: '3'

networks:
  monitor-net:
    driver: bridge

# volumes:
#   telegraf-data: {}
#   influxdb-data: {}
#   grafana-data: {}
  # taurus-data: {}
  # prometheus-data: {}
  # jenkins-data: {}
  # jenkins-log: {}

services:

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   volumes:
  #     - prometheus-data:/prometheus
  #     - ./prometheus:/etc/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   restart: unless-stopped
  #   expose:
  #     - 9090
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: unless-stopped
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
  #     - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   expose:
  #     - 3000
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   restart: unless-stopped
  #   volumes:
  #     - influxdb-data:/var/lib/influxdb
  #   environment:
  #     - INFLUXDB_DB=jmeter
  #     - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME:-admin}
  #     - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD:-admin}
  #   expose:
  #     - 8086
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"

    # caddy:
    #   image: caddy:latest
    #   container_name: caddy
    #   ports:
    #     - "3000:3000"
    #     - "9090:9090"
    #     - "8086:8086"
    #     - "8081:8081"
    #   volumes:
    #     - ./caddy:/etc/caddy
    #   environment:
    #     - ADMIN_USER=${ADMIN_USER:-admin}
    #     - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    #   restart: unless-stopped
    #   networks:
    #     - monitor-net
    #   labels:
    #     org.label-schema.group: "monitoring"

  # jenkins:
  #   image: jenkins/jenkins
  #   build: ./jenkins
  #   container_name: jenkins
  #   restart: unless-stopped
  #   volumes:
  #     - jenkins-data:/var/jenkins_home
  #     - jenkins-log:/var/log/jenkins
  #     # - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - JENKINS_ADMIN_LOGIN=${JENKINS_ADMIN_LOGIN:-admin}
  #     - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD:-admin}
  #     # - JAVA_OPTS="-Xmx8192m"
  #     # - JAVA_OPTS="-Djenkins.install.runSetupWizard=false"
  #     # - JENKINS_USER=${JENKINS_ADMIN_LOGIN:-admin}
  #     # - JENKINS_PASSWORD=${JENKINS_ADMIN_PASSWORD:-admin}
  #     # - JENKINS_HOST="localhost"
  #     # - JENKINS_PORT="8080"
  #     # - JENKINS_API="http://$JENKINS_USER:$JENKINS_PASSWORD@$JENKINS_HOST:$JENKINS_PORT"
  #   # expose:
  #   #   - 8081
  #   ports:
  #     - "8080:8080"
  #     - "50000:50000"
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"
  #   # command: curl -X POST "$JENKINS_API/restart"






#WORK



  # telegraf:
  #   image: telegraf:latest
  #   hostname: telegraf
  #   container_name: telegraf
  #   volumes:
  #     # - telegraf-data:/telegraf
  #     - ./telegraf:/etc/telegraf:ro
  #   networks:
  #     - monitor-net
  #   restart: unless-stopped

  # influxdb:
  #   image: influxdb:latest
  #   container_name: influxdb
  #   # volumes:
  #   #   - influxdb-data:/var/lib/influxdb
  #   environment:
  #     - INFLUXDB_DB=jmeter
  #     - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME:-admin}
  #     - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD:-admin}
  #   expose:
  #     - 8086
  #   networks:
  #     - monitor-net
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   volumes:
  #     # - grafana-data:/var/lib/grafana
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
  #     - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #     - DS_INFLUXDB_JMETER=jmeter
  #     - DS_INFLUXDB_TELEGRAF=telegraf
  #   expose:
  #     - 3000
  #   networks:
  #     - monitor-net
  #   restart: unless-stopped

  taurus:
    image: blazemeter/taurus:latest
    container_name: taurus
    # volumes:
    #   - ./taurus:/bzt-configs
    networks:
      - monitor-net
    # restart: no

  jenkins:
    image: jenkins/jenkins
    build: ./jenkins
    container_name: jenkins
    volumes:
      - ./jenkins/ref/init.groovy.d:/usr/share/jenkins/ref/init.groovy.d
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/bin/docker
    environment:
      - JAVA_OPTS="-Djenkins.install.runSetupWizard=false"
      - JENKINS_ADMIN_LOGIN=${JENKINS_ADMIN_LOGIN:-admin}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD:-admin}
    ports:
      - "8080:8080"
      - "50000:50000"
    restart: unless-stopped
    networks:
      - monitor-net

  # caddy:
  #   image: caddy:latest
  #   container_name: caddy
  #   ports:
  #     - "3000:3000"
  #     - "8086:8086"
  #   volumes:
  #     - ./caddy:/etc/caddy
  #   environment:
  #     - ADMIN_USER=${ADMIN_USER:-admin}
  #     - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
  #   networks:
  #     - monitor-net
  #   restart: unless-stopped
